[gd_resource type="Shader" format=3 uid="uid://chfbtccf0myk7"]

[resource]
code = "shader_type spatial;
render_mode skip_vertex_transform,blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform float outerholerad = 0.05;
uniform float holerad = 0.01;
uniform bool blockleft = true;


void vertex() {
	bool blockedside = (VIEW_INDEX == (blockleft ? VIEW_MONO_LEFT : VIEW_RIGHT));
	if (blockedside) {
		VERTEX.x *= 20.0;
		VERTEX.y *= 20.0;
		VERTEX.z += 0.4;
	}
	VERTEX = VERTEX + EYE_OFFSET; 
    VERTEX = (MODELVIEW_MATRIX * vec4(VERTEX, 1.0)).xyz;
}

void fragment() {
	bool blockedside = (VIEW_INDEX == (blockleft ? VIEW_MONO_LEFT : VIEW_RIGHT));
	float rsq = VERTEX.x*VERTEX.x + VERTEX.y*VERTEX.y;
	//if (rsq <= holerad*holerad)
	//	discard;
	if (blockedside)
		ALBEDO = vec3(0.01,0.01,0.01); 
	else {
		if (rsq <= holerad*holerad)
			discard;
		if (rsq > outerholerad*outerholerad)
			discard;
		ALBEDO = albedo.rgb;
	}
}
"
